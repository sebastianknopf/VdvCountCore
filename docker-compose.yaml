services:
  vcc-database:
    image: mysql:latest
    restart: unless-stopped
    networks:
      - vcc
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: passwd
      MYSQL_DATABASE: vccdb
      MYSQL_USER: vccuser
      MYSQL_PASSWORD: vccpasswd
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      timeout: 5s
  vcc-proxy:
    image: httpd:2.4
    restart: unless-stopped
    networks:
      - vcc
    ports:
      - "${VCC_API_PORT}:80"
      - "${VCC_API_SSL_PORT}:443"
    entrypoint: ["/bin/sh", "/usr/local/bin/entrypoint.sh"]
    environment:
      - VCC_USERNAME
      - VCC_PASSWORD
      - VCC_PROXY_SSL_ACTIVE
    volumes:
      - ./src/vccproxy/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
      - ./src/vccproxy/httpd-vcc-proxy-ssl.conf:/usr/local/apache2/conf/extra/httpd-vcc-proxy-ssl.conf:ro
      - ./src/vccproxy/httpd-vcc-proxy.conf:/usr/local/apache2/conf/extra/httpd-vcc-proxy.conf:ro
      - ${VCC_PROXY_SSL_CERT_FILENAME}:/etc/ssl/certs/cert.crt
      - ${VCC_PROXY_SSL_CHAIN_FILEMAME}:/etc/ssl/certs/chain.crt
      - ${VCC_PROXY_SSL_KEY_FILENAME}:/etc/ssl/private/key.key
    depends_on:
      - vcc-api
  vcc-vdv452-import:
    build:
      context: .
      dockerfile: ./src/vccvdv452import/Dockerfile
    restart: unless-stopped
    networks:
      - vcc
    environment:
      - VCC_DEBUG
      - VCC_VDV452_IMPORT_INTERVAL
      - VCC_VDV452_ADAPTER_TYPE
    volumes:
      - ${VCC_VDV452_IMPORT_DIRECTORY}:/data
    depends_on:
      "vcc-database":
        condition: service_healthy
  vcc-md-import:
    build:
      context: .
      dockerfile: ./src/vccmdimport/Dockerfile
    restart: unless-stopped
    networks:
      - vcc
    environment:
      - VCC_DEBUG
      - VCC_MD_IMPORT_INTERVAL
      - VCC_MD_IMPORT_ADAPTER_TYPE
    volumes:
      - ${VCC_MD_IMPORT_DIRECTORY}:/data
    depends_on:
      "vcc-database":
        condition: service_healthy
  vcc-api:
    build:
      context: .
      dockerfile: ./src/vccapi/Dockerfile
    restart: unless-stopped
    networks:
      - vcc
    expose:
      - "8080"
    environment:
      - VCC_DEBUG
      - VCC_USERNAME
      - VCC_PASSWORD
      - VCC_API_SCHEME
      - VCC_API_HOSTNAME
      - VCC_API_PORT
      - VCC_API_PUBLIC_BASE_URL
      - VCC_API_ONLY_STARTING_TRIPS
    volumes:
      - ./src/resources:/etc/resources
      - ${VCC_API_DATA_DIRECTORY}:/data
      - ${VCC_API_LOG_DIRECTORY}:/logs
    depends_on:
      "vcc-database":
        condition: service_healthy
  vcc-vdv457-export:
    build:
      context: .
      dockerfile: ./src/vccvdv457export/Dockerfile
    restart: unless-stopped
    networks:
      - vcc
    environment:
      - VCC_DEBUG
      - VCC_VDV457_EXPORT_INTERVAL
      - VCC_VDV457_EXPORT_CONVERT_2
      - VCC_VDV457_EXPORT_ADAPTER_TYPE_2
      - VCC_VDV457_EXPORT_CONVERT_3
      - VCC_VDV457_EXPORT_ADAPTER_TYPE_3
    volumes:
      - ./src/resources:/etc/resources
      - ${VCC_VDV457_EXPORT_DATA_DIRECORY}:/data/input
      - ${VCC_VDV457_EXPORT_OUTPUT_DIRECTORY_2}:/data/vdv4572
      - ${VCC_VDV457_EXPORT_OUTPUT_DIRECTORY_3}:/data/vdv4573
    depends_on:
      "vcc-database":
        condition: service_healthy

networks:
  vcc: